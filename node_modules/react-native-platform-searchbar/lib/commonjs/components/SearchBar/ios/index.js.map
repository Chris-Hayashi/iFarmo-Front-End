{"version":3,"sources":["index.tsx"],"names":["SearchBar","ref","value","theme","cancelText","cancelTextStyle","cancelAccessibilityLabel","clearAccessibilityLabel","returnKeyType","selectionColor","iosBlue","placeholderTextColor","iosLightPlaceholderGray","iosDarkPlaceholderGray","iconColor","leftIcon","style","inputStyle","children","onFocus","onChangeText","onCancel","onClear","props","fontScale","styles","defaultStyles","darkStyles","cancelButtonVisible","setCancelButtonVisible","inputRef","current","handleFocus","e","LayoutAnimation","configureNext","Presets","easeInEaseOut","duration","handleClear","handleCancel","blur","wrapper","inputWrapper","input","paddingHorizontal","clearButton","undefined","cancelButton","StyleSheet","create","flexDirection","alignItems","flex","backgroundColor","borderRadius","paddingVertical","position","width","height","marginLeft","aspectRatio","marginRight","color"],"mappings":"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","sourcesContent":["import React, {\n    useRef,\n    useState,\n    forwardRef,\n    useImperativeHandle,\n} from 'react';\nimport {\n    LayoutAnimation,\n    NativeSyntheticEvent,\n    StyleSheet,\n    TextInput,\n    TextInputFocusEventData,\n    useWindowDimensions,\n    View,\n} from 'react-native';\n\nimport {\n    iosBlue,\n    iosDarkPlaceholderGray,\n    iosLightPlaceholderGray,\n} from '../../../constants/colors';\nimport SearchIcon from '../../icons/SearchIcon';\nimport CancelButton from './CancelButton';\nimport ClearButton from './ClearButton';\n\nimport type { SearchBarProps } from '../../../types';\n\nconst SearchBar = forwardRef<TextInput | null, SearchBarProps>(\n    (\n        {\n            value,\n            theme = 'light',\n            cancelText = 'Cancel',\n            cancelTextStyle,\n            cancelAccessibilityLabel,\n            clearAccessibilityLabel,\n            returnKeyType = 'search',\n            selectionColor = iosBlue,\n            placeholderTextColor = theme === 'light'\n                ? iosLightPlaceholderGray\n                : iosDarkPlaceholderGray,\n            iconColor = placeholderTextColor,\n            leftIcon,\n            style,\n            inputStyle,\n            children,\n            onFocus,\n            onChangeText,\n            onCancel,\n            onClear,\n            ...props\n        },\n        ref\n    ) => {\n        const { fontScale } = useWindowDimensions();\n\n        const styles = theme === 'light' ? defaultStyles : darkStyles;\n        const [cancelButtonVisible, setCancelButtonVisible] = useState(false);\n        const inputRef = useRef<TextInput>(null);\n        useImperativeHandle(ref, () => inputRef.current!);\n\n        const handleFocus = (\n            e: NativeSyntheticEvent<TextInputFocusEventData>\n        ) => {\n            LayoutAnimation.configureNext({\n                ...LayoutAnimation.Presets.easeInEaseOut,\n                duration: 300,\n            });\n            setCancelButtonVisible(true);\n            if (onFocus) {\n                onFocus(e);\n            }\n        };\n\n        const handleClear = () => {\n            if (onClear) {\n                onClear();\n            }\n            // somehow using inputRef.current.clear() doesn't work\n            onChangeText('');\n        };\n\n        const handleCancel = () => {\n            if (onCancel) {\n                onCancel();\n            }\n            if (inputRef.current) {\n                handleClear();\n                inputRef.current.blur();\n            }\n            LayoutAnimation.configureNext({\n                ...LayoutAnimation.Presets.easeInEaseOut,\n                duration: 300,\n            });\n            setCancelButtonVisible(false);\n        };\n\n        return (\n            <View style={[styles.wrapper, style]}>\n                <View style={styles.inputWrapper}>\n                    <TextInput\n                        ref={inputRef}\n                        value={value}\n                        clearButtonMode=\"never\"\n                        autoCorrect={false}\n                        onChangeText={onChangeText}\n                        onFocus={handleFocus}\n                        returnKeyType={returnKeyType}\n                        placeholderTextColor={placeholderTextColor}\n                        selectionColor={selectionColor}\n                        accessibilityRole=\"search\"\n                        accessibilityTraits=\"search\"\n                        {...props}\n                        style={[\n                            styles.input,\n                            { paddingHorizontal: 25 + 10 * fontScale },\n                            inputStyle,\n                        ]}\n                    />\n                    <View pointerEvents=\"box-none\" style={styles.children}>\n                        {leftIcon ? (\n                            <View style={styles.leftIcon}>{leftIcon}</View>\n                        ) : (\n                            <SearchIcon\n                                color={iconColor}\n                                style={styles.leftIcon}\n                            />\n                        )}\n                        {children}\n                        {value ? (\n                            <ClearButton\n                                color={iconColor}\n                                onPress={handleClear}\n                                accessibilityLabel={clearAccessibilityLabel}\n                                style={styles.clearButton}\n                            />\n                        ) : undefined}\n                    </View>\n                </View>\n                <CancelButton\n                    text={cancelText}\n                    visible={cancelButtonVisible}\n                    onPress={handleCancel}\n                    style={styles.cancelButton}\n                    textStyle={cancelTextStyle}\n                    accessibilityLabel={cancelAccessibilityLabel}\n                />\n            </View>\n        );\n    }\n);\n\nconst defaultStyles = StyleSheet.create({\n    wrapper: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    inputWrapper: {\n        flex: 1,\n    },\n    input: {\n        backgroundColor: '#E3E3E9',\n        borderRadius: 12,\n        paddingVertical: 10,\n    },\n    children: {\n        position: 'absolute',\n        flexDirection: 'row',\n        width: '100%',\n        height: '100%',\n        alignItems: 'center',\n    },\n    cancelButton: {\n        marginLeft: 10,\n    },\n    clearButton: {\n        height: '40%',\n        aspectRatio: 1,\n        marginRight: 10,\n    },\n    leftIcon: {\n        marginLeft: 10,\n        marginRight: 'auto',\n        height: '50%',\n        aspectRatio: 1,\n    },\n});\n\nconst darkStyles = StyleSheet.create({\n    ...defaultStyles,\n    input: {\n        ...defaultStyles.input,\n        backgroundColor: '#1c1c1f',\n        color: '#FFF',\n    },\n});\n\nexport default SearchBar;\n"]}