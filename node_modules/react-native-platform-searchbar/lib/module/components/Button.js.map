{"version":3,"sources":["Button.tsx"],"names":["React","Pressable","Platform","ButtonIOS","onPress","style","accessibilityLabel","hitSlop","children","pressed","opacity","ButtonAndroid","color","borderless","OS"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,cAA1D;;AAUA,MAAMC,SAA0B,GAAG,CAAC;AAChCC,EAAAA,OADgC;AAEhCC,EAAAA,KAAK,EAALA,MAFgC;AAGhCC,EAAAA,kBAHgC;AAIhCC,EAAAA,OAJgC;AAKhCC,EAAAA;AALgC,CAAD,KAM7B;AACF,sBACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAEJ,OADb;AAEI,IAAA,kBAAkB,EAAEE,kBAFxB;AAGI,IAAA,0BAA0B,EAAC,QAH/B;AAII,IAAA,iBAAiB,EAAC,QAJtB;AAKI,IAAA,mBAAmB,EAAC,QALxB;AAMI,IAAA,OAAO,EAAEC,OANb;AAOI,IAAA,KAAK,EAAE,CAAC;AAAEE,MAAAA;AAAF,KAAD,KAAiB,CAACJ,MAAD,EAAQI,OAAO,IAAI;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAnB;AAP5B,KASKF,QATL,CADJ;AAaH,CApBD;;AAsBA,MAAMG,aAA8B,GAAG,CAAC;AACpCP,EAAAA,OADoC;AAEpCC,EAAAA,KAFoC;AAGpCC,EAAAA,kBAHoC;AAIpCC,EAAAA,OAJoC;AAKpCC,EAAAA;AALoC,CAAD,KAMjC;AACF,sBACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAEJ,OADb;AAEI,IAAA,KAAK,EAAEC,KAFX;AAGI,IAAA,kBAAkB,EAAEC,kBAHxB;AAII,IAAA,0BAA0B,EAAC,QAJ/B;AAKI,IAAA,iBAAiB,EAAC,QALtB;AAMI,IAAA,mBAAmB,EAAC,QANxB;AAOI,IAAA,OAAO,EAAEC,OAPb;AAQI,IAAA,cAAc,EAAE;AACZK,MAAAA,KAAK,EAAE,MADK;AAEZC,MAAAA,UAAU,EAAE;AAFA;AARpB,KAaKL,QAbL,CADJ;AAiBH,CAxBD;;AA0BA,eAAeN,QAAQ,CAACY,EAAT,KAAgB,KAAhB,GAAwBX,SAAxB,GAAoCQ,aAAnD","sourcesContent":["import React from 'react';\nimport { StyleProp, ViewStyle, Pressable, Platform } from 'react-native';\n\ntype Props = {\n    onPress(): void;\n    style?: StyleProp<ViewStyle>;\n    children?: React.ReactElement;\n    hitSlop?: number;\n    accessibilityLabel?: string;\n};\n\nconst ButtonIOS: React.FC<Props> = ({\n    onPress,\n    style,\n    accessibilityLabel,\n    hitSlop,\n    children,\n}) => {\n    return (\n        <Pressable\n            onPress={onPress}\n            accessibilityLabel={accessibilityLabel}\n            accessibilityComponentType=\"button\"\n            accessibilityRole=\"button\"\n            accessibilityTraits=\"button\"\n            hitSlop={hitSlop}\n            style={({ pressed }) => [style, pressed && { opacity: 0.5 }]}\n        >\n            {children}\n        </Pressable>\n    );\n};\n\nconst ButtonAndroid: React.FC<Props> = ({\n    onPress,\n    style,\n    accessibilityLabel,\n    hitSlop,\n    children,\n}) => {\n    return (\n        <Pressable\n            onPress={onPress}\n            style={style}\n            accessibilityLabel={accessibilityLabel}\n            accessibilityComponentType=\"button\"\n            accessibilityRole=\"button\"\n            accessibilityTraits=\"button\"\n            hitSlop={hitSlop}\n            android_ripple={{\n                color: '#888',\n                borderless: true,\n            }}\n        >\n            {children}\n        </Pressable>\n    );\n};\n\nexport default Platform.OS === 'ios' ? ButtonIOS : ButtonAndroid;\n"]}