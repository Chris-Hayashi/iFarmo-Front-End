function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import { Platform } from 'react-native';
import SearchBarIOS from './components/SearchBar/ios';
import SearchBarAndroid from './components/SearchBar/android';
const SearchBar = /*#__PURE__*/forwardRef((_ref, ref) => {
  let {
    platform = 'default'
  } = _ref,
      props = _objectWithoutProperties(_ref, ["platform"]);

  if (platform === 'default') {
    return Platform.select({
      ios: /*#__PURE__*/React.createElement(SearchBarIOS, _extends({
        ref: ref
      }, props)),
      android: /*#__PURE__*/React.createElement(SearchBarAndroid, _extends({
        ref: ref
      }, props))
    }) || null;
  }

  return platform === 'ios' ? /*#__PURE__*/React.createElement(SearchBarIOS, _extends({
    ref: ref
  }, props)) : /*#__PURE__*/React.createElement(SearchBarAndroid, _extends({
    ref: ref
  }, props));
});
export default SearchBar;
//# sourceMappingURL=index.js.map